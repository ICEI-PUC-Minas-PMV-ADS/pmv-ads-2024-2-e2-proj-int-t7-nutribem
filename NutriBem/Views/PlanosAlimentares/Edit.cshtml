@model NutriBem.Models.PlanoAlimentar

@{
    ViewData["Title"] = "Edit";
}

<div class="ms-5 mb-4">
    <h1>Editar</h1>
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nomepaciente" class="control-label"></label>
                <input asp-for="Nomepaciente" class="form-control" />
                <span asp-validation-for="Nomepaciente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Objetivo" class="control-label"></label>
                <input asp-for="Objetivo" class="form-control" />
                <span asp-validation-for="Objetivo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Observacao" class="control-label"></label>
                <input asp-for="Observacao" class="form-control" />
                <span asp-validation-for="Observacao" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="Salvar" class="btn btn-success" /> |
                <a asp-action="Index" class="btn btn-danger">Voltar</a> |
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#novaRefeicaoModal">
                    Adicionar Refeição
                </button>
            </div>
        </form>
    </div>
</div>

<div class="ms-5" id="partialZone">
    @await Html.PartialAsync("_PartialListRefeicoes", Model.Refeicoes)
</div>

<!-- Modal para Criar Nova Refeição -->
<div class="modal fade" id="novaRefeicaoModal" tabindex="-1" role="dialog" aria-labelledby="novaRefeicaoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="novaRefeicaoModalLabel">Nova Refeição</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalContentCriar">
                <!-- O conteúdo do formulário será carregado aqui -->
            </div>
            <div id="validationErrors" class="text-danger"></div>
        </div>
    </div>
</div>

<!-- Modal para Editar uma Refeição-->
<div class="modal fade" id="editarRefeicaoModal" tabindex="-1" role="dialog" aria-labelledby="editarRefeicaoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editarRefeicaoModalLabel">Editar refeição</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalContentEditar">
                <!-- O conteúdo do formulário será carregado aqui -->
            </div>
            <div id="validationErrors" class="text-danger"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Carregar as refeições na zona de partial
        function loadRefeicoes() {
            $('#partialZone').load('@Url.Action("RefeicoesPartial", "PlanosAlimentares", new { id = Model.Id })');
        }

        // Chamada para excluir refeição
        $(document).on('click', '.deleteRefeicaoBtn', function (e) {
            e.preventDefault(); // Evita que o formulário seja enviado normalmente

            var refeicaoId = $(this).data('id'); // Captura o ID da refeição
            console.log("ID da refeição a ser deletada:", refeicaoId); // Log do ID

            // Confirmação antes de excluir
            if (confirm("Tem certeza que deseja excluir esta refeição?")) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Delete", "Refeicoes")', // URL da ação Delete
                    data: { id: refeicaoId }, // Envia o ID da refeição
                    success: function (response) {
                        if (response.success) {
                            loadRefeicoes(); // Atualiza a lista de refeições
                        } else {
                            alert(response.message || "Erro ao excluir a refeição.");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText); // Log do erro no console
                        alert("Erro ao excluir a refeição.");
                    }
                });
            }
        });

        // Chamada para abrir o modal de criação da refeição
        $(document).ready(function () {
            $('#novaRefeicaoModal').on('show.bs.modal', function () {
                console.log("Tentando abrir o modal de nova refeição."); // Log para depuração
                var planoAlimentarId = '@Model.Id'; // Obtém o ID do plano alimentar atual

                // Certifique-se de que a URL da ação está correta
                $.ajax({
                    url: '@Url.Action("CreateRefeicaoPartial", "PlanosAlimentares")',
                    type: 'GET',
                    data: { planoAlimentarId: planoAlimentarId }, // Passa o ID do plano alimentar
                    success: function (data) {
                        $('#modalContentCriar').html(data);
                        console.log("Conteúdo carregado no modal.");
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao carregar o conteúdo do modal:", error); // Log do erro
                        $('#modalContentCriar').html('<p>Erro ao carregar conteúdo.</p>');
                    }
                });
            });
        });

        // Chamada para criar a refeição
        $(document).on('submit', '#createRefeicaoForm', function (e) {
            e.preventDefault(); // Impede o envio normal do formulário

            var planoAlimentarId = '@Model.Id'; // Captura o ID do plano alimentar

            $.ajax({
                url: '@Url.Action("Create", "Refeicoes")', // URL da ação Create no controlador de Refeições
                type: 'POST',
                data: $(this).serialize() + '&PlanoAlimentarId=' + planoAlimentarId, // Adiciona o PlanoAlimentarId manualmente
                success: function (response) {
                    if (response.success) {
                        $('#novaRefeicaoModal').modal('hide'); // Fecha o modal
                        loadRefeicoes(); // Atualiza a lista de refeições na página
                    } else {
                        // Limpa mensagens de erro anteriores
                        $('#validationErrors').empty();

                        // Exibe novos erros
                        response.errors.forEach(function (error) {
                            $('#validationErrors').append('<div>' + error + '</div>');
                        });
                    }
                },
                error: function () {
                    alert("Erro ao criar a refeição.");
                }
            });
        });

        // Chamada para abrir o modal de editar a refeição
        $(document).ready(function () {
            $(document).on('click', '.editRefeicaoBtn', function () {
                var refeicaoId = $(this).data('id'); // Obtém o id da refeição

                // Fazer a requisição AJAX para carregar o conteúdo da edição da refeição
                $.ajax({
                    url: '@Url.Action("EditRefeicaoPartial", "PlanosAlimentares")', // Ação do controlador que retorna a partial view
                    type: 'GET',
                    data: { id: refeicaoId }, // Passa o id da refeição
                    success: function (data) {
                        // Carregar o conteúdo no modal
                        $('#modalContentEditar').html(data);
                        $('#editarRefeicaoModal').modal('show'); // Mostrar o modal após o conteúdo ser carregado
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao carregar o conteúdo da refeição para edição:", error);
                        $('#modalContent').html('<p>Erro ao carregar conteúdo.</p>');
                    }
                });
            });
        });

        // Enviar o formulário de edição com AJAX
        $(document).on('submit', '#editarRefeicaoModal form', function (e) {
            e.preventDefault(); // Evita o envio tradicional do formulário

            var refeicaoId = $('#Id').val();
            var planoAlimentarId = '@Model.Id';

            var formData = $(this).serialize() + '&id=' + refeicaoId + '&PlanoAlimentarId=' + planoAlimentarId;

            console.log(formData);  // Veja os dados que estão sendo enviados

            $.ajax({
                url: '@Url.Action("Edit", "Refeicoes")',
                type: 'POST',
                data: formData, // Envia os dados serializados
                success: function (response) {
                    if (response.success) {
                        $('#editarRefeicaoModal').modal('hide'); // Fecha o modal
                        alert(response.message); // Exibe a mensagem de sucesso
                        location.reload(); // Recarrega a página ou atualiza a lista via AJAX
                    } else {
                        alert(response.message); // Exibe a mensagem de erro
                        if (response.errors) {
                            console.log(response.errors); // Verifique os erros de validação
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Erro ao editar a refeição:", error);
                    alert('Erro ao editar a refeição.');
                }
            });
        });





        // Carregar as refeições na inicialização
        $(document).ready(function () {
            loadRefeicoes();
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
